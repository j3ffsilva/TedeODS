{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inteli\\\\Desktop\\\\Fran_D\\xEA\\\\Projeto_Jefferson_ODS\\\\search-system\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { buscarTrabalhos, buscarODS } from '../api';\n\n// Estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 150px;\n`;\n_c = SearchWrapper;\nconst SearchInput = styled.input`\n  width: 600px;\n  padding: 15px;\n  font-size: 18px;\n  border: 2px solid #ddd;\n  border-radius: 24px;\n  margin-bottom: 20px;\n`;\n_c2 = SearchInput;\nconst SearchButton = styled.button`\n  padding: 10px 20px;\n  background-color: #4285f4;\n  color: white;\n  border: none;\n  border-radius: 24px;\n  cursor: pointer;\n  font-size: 16px;\n\n  &:hover {\n    background-color: #357ae8;\n  }\n`;\n_c3 = SearchButton;\nconst TagsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin: 20px 0;\n`;\n_c4 = TagsWrapper;\nconst Tag = styled.span`\n  background-color: ${({\n  color\n}) => color || '#f1f3f4'};\n  color: #fff;\n  padding: 8px 16px;\n  border-radius: 20px;\n  font-size: 14px;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n_c5 = Tag;\nconst FeedbackMessage = styled.p`\n  color: red;\n  margin-top: 20px;\n`;\n\n// Função para normalizar texto (remover acentos, transformar em minúsculas)\n_c6 = FeedbackMessage;\nconst normalizarTexto = texto => texto.normalize('NFD') // Normaliza acentos\n.replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\n.toLowerCase(); // Converte para minúsculas\n\nfunction SearchBar({\n  onResults\n}) {\n  _s();\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tags, setTags] = useState([]); // Todas as tags disponíveis\n  const [currentTags, setCurrentTags] = useState([]); // Tags rotativas exibidas\n  const [tagColors, setTagColors] = useState([]); // Cores rotativas\n  const [feedback, setFeedback] = useState('');\n  const fixedColors = ['#FF5733', '#4285F4', '#FFA500', '#34A853', '#800080'];\n\n  // Carregar todas as tags na inicialização\n  useEffect(() => {\n    const carregarODS = async () => {\n      try {\n        const resultados = await buscarODS();\n        const uniqueTags = [...new Set(resultados.flatMap(item => item.palavras_chave || []))];\n        setTags(uniqueTags); // Salva todas as tags disponíveis\n        atualizarTags(uniqueTags); // Inicializa as primeiras tags exibidas\n        setTagColors([...fixedColors].sort(() => Math.random() - 0.5));\n      } catch (err) {\n        console.error('Erro ao carregar dados iniciais:', err);\n        setError('Erro ao carregar dados iniciais.');\n      }\n    };\n    carregarODS();\n  }, []);\n\n  // Função para atualizar as tags exibidas a cada 20 segundos\n  useEffect(() => {\n    if (tags.length > 0) {\n      const interval = setInterval(() => {\n        atualizarTags(tags);\n      }, 20000); // 20 segundos\n\n      return () => clearInterval(interval); // Limpa o intervalo ao desmontar\n    }\n  }, [tags]);\n\n  // Atualiza as tags rotativas exibidas\n  const atualizarTags = todasAsTags => {\n    const shuffledTags = [...todasAsTags].sort(() => Math.random() - 0.5);\n    setCurrentTags(shuffledTags.slice(0, 5)); // Exibe as próximas 5 tags\n    setTagColors([...fixedColors].sort(() => Math.random() - 0.5));\n  };\n\n  // Identifica o tipo de busca com base no prefixo da entrada\n  const identificarTipoDeBusca = query => {\n    const lowerQuery = normalizarTexto(query.trim());\n    if (lowerQuery.startsWith('data:')) {\n      const data = lowerQuery.replace('data:', '').trim();\n      return {\n        tipo: 'data',\n        valor: data\n      };\n    }\n    if (lowerQuery.startsWith('ods:')) {\n      const ods = lowerQuery.replace('ods:', '').trim();\n      return {\n        tipo: 'ods',\n        valor: parseInt(ods, 10)\n      };\n    }\n    return {\n      tipo: 'palavra-chave',\n      valor: query\n    };\n  };\n\n  // Processa a busca\n  const handleSearch = async () => {\n    setLoading(true);\n    setError(null);\n    setFeedback('');\n    const {\n      tipo,\n      valor\n    } = identificarTipoDeBusca(query);\n    try {\n      let resultados = [];\n      if (tipo === 'data') {\n        const params = valor.length === 4 ? {\n          data: `${valor}-01-01`\n        } : {\n          data: valor\n        };\n        resultados = await buscarTrabalhos(params);\n      } else if (tipo === 'ods') {\n        const params = {\n          ods: valor\n        };\n        resultados = await buscarTrabalhos(params);\n      } else if (tipo === 'palavra-chave') {\n        const termos = normalizarTexto(valor).split(/\\s+/);\n        const buscas = await Promise.all(termos.map(termo => buscarTrabalhos({\n          palavra_resumo: termo\n        }).catch(() => [])));\n        resultados = [...new Set(buscas.flat())];\n      }\n      if (resultados.length === 0) {\n        setFeedback('Nenhum resultado encontrado. Tente outros termos ou refine sua busca.');\n      }\n      onResults(resultados);\n    } catch (err) {\n      setError('Erro ao buscar trabalhos. Tente novamente.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTagClick = tag => {\n    setQuery(tag);\n    handleSearch(tag);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SearchWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      onKeyDown: handleKeyDown,\n      placeholder: \"Ex.: data:2021, ODS:1, dignidade previd\\xEAncia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n      onClick: handleSearch,\n      disabled: loading,\n      children: loading ? 'Buscando...' : 'Pesquisar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(FeedbackMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this), feedback && /*#__PURE__*/_jsxDEV(FeedbackMessage, {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(TagsWrapper, {\n      children: currentTags.map((tag, index) => /*#__PURE__*/_jsxDEV(Tag, {\n        onClick: () => handleTagClick(tag),\n        color: tagColors[index % tagColors.length],\n        children: tag\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"SYphTw64cYLtENIQJPWucr2HHfc=\");\n_c7 = SearchBar;\nexport default SearchBar;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"SearchWrapper\");\n$RefreshReg$(_c2, \"SearchInput\");\n$RefreshReg$(_c3, \"SearchButton\");\n$RefreshReg$(_c4, \"TagsWrapper\");\n$RefreshReg$(_c5, \"Tag\");\n$RefreshReg$(_c6, \"FeedbackMessage\");\n$RefreshReg$(_c7, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","styled","buscarTrabalhos","buscarODS","jsxDEV","_jsxDEV","SearchWrapper","div","_c","SearchInput","input","_c2","SearchButton","button","_c3","TagsWrapper","_c4","Tag","span","color","_c5","FeedbackMessage","p","_c6","normalizarTexto","texto","normalize","replace","toLowerCase","SearchBar","onResults","_s","query","setQuery","loading","setLoading","error","setError","tags","setTags","currentTags","setCurrentTags","tagColors","setTagColors","feedback","setFeedback","fixedColors","carregarODS","resultados","uniqueTags","Set","flatMap","item","palavras_chave","atualizarTags","sort","Math","random","err","console","length","interval","setInterval","clearInterval","todasAsTags","shuffledTags","slice","identificarTipoDeBusca","lowerQuery","trim","startsWith","data","tipo","valor","ods","parseInt","handleSearch","params","termos","split","buscas","Promise","all","map","termo","palavra_resumo","catch","flat","handleTagClick","tag","handleKeyDown","e","key","children","type","value","onChange","target","onKeyDown","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","index","_c7","$RefreshReg$"],"sources":["C:/Users/Inteli/Desktop/Fran_Dê/Projeto_Jefferson_ODS/search-system/src/components/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { buscarTrabalhos, buscarODS } from '../api';\r\n\r\n// Estilos\r\nconst SearchWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 150px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 600px;\r\n  padding: 15px;\r\n  font-size: 18px;\r\n  border: 2px solid #ddd;\r\n  border-radius: 24px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  padding: 10px 20px;\r\n  background-color: #4285f4;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 24px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n\r\n  &:hover {\r\n    background-color: #357ae8;\r\n  }\r\n`;\r\n\r\nconst TagsWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Tag = styled.span`\r\n  background-color: ${({ color }) => color || '#f1f3f4'};\r\n  color: #fff;\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst FeedbackMessage = styled.p`\r\n  color: red;\r\n  margin-top: 20px;\r\n`;\r\n\r\n// Função para normalizar texto (remover acentos, transformar em minúsculas)\r\nconst normalizarTexto = (texto) =>\r\n  texto\r\n    .normalize('NFD') // Normaliza acentos\r\n    .replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\r\n    .toLowerCase(); // Converte para minúsculas\r\n\r\nfunction SearchBar({ onResults }) {\r\n  const [query, setQuery] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [tags, setTags] = useState([]); // Todas as tags disponíveis\r\n  const [currentTags, setCurrentTags] = useState([]); // Tags rotativas exibidas\r\n  const [tagColors, setTagColors] = useState([]); // Cores rotativas\r\n  const [feedback, setFeedback] = useState('');\r\n\r\n  const fixedColors = ['#FF5733', '#4285F4', '#FFA500', '#34A853', '#800080'];\r\n\r\n  // Carregar todas as tags na inicialização\r\n  useEffect(() => {\r\n    const carregarODS = async () => {\r\n      try {\r\n        const resultados = await buscarODS();\r\n        const uniqueTags = [...new Set(resultados.flatMap((item) => item.palavras_chave || []))];\r\n        setTags(uniqueTags); // Salva todas as tags disponíveis\r\n        atualizarTags(uniqueTags); // Inicializa as primeiras tags exibidas\r\n        setTagColors([...fixedColors].sort(() => Math.random() - 0.5));\r\n      } catch (err) {\r\n        console.error('Erro ao carregar dados iniciais:', err);\r\n        setError('Erro ao carregar dados iniciais.');\r\n      }\r\n    };\r\n\r\n    carregarODS();\r\n  }, []);\r\n\r\n  // Função para atualizar as tags exibidas a cada 20 segundos\r\n  useEffect(() => {\r\n    if (tags.length > 0) {\r\n      const interval = setInterval(() => {\r\n        atualizarTags(tags);\r\n      }, 20000); // 20 segundos\r\n\r\n      return () => clearInterval(interval); // Limpa o intervalo ao desmontar\r\n    }\r\n  }, [tags]);\r\n\r\n  // Atualiza as tags rotativas exibidas\r\n  const atualizarTags = (todasAsTags) => {\r\n    const shuffledTags = [...todasAsTags].sort(() => Math.random() - 0.5);\r\n    setCurrentTags(shuffledTags.slice(0, 5)); // Exibe as próximas 5 tags\r\n    setTagColors([...fixedColors].sort(() => Math.random() - 0.5));\r\n  };\r\n\r\n  // Identifica o tipo de busca com base no prefixo da entrada\r\n  const identificarTipoDeBusca = (query) => {\r\n    const lowerQuery = normalizarTexto(query.trim());\r\n\r\n    if (lowerQuery.startsWith('data:')) {\r\n      const data = lowerQuery.replace('data:', '').trim();\r\n      return { tipo: 'data', valor: data };\r\n    }\r\n\r\n    if (lowerQuery.startsWith('ods:')) {\r\n      const ods = lowerQuery.replace('ods:', '').trim();\r\n      return { tipo: 'ods', valor: parseInt(ods, 10) };\r\n    }\r\n\r\n    return { tipo: 'palavra-chave', valor: query };\r\n  };\r\n\r\n  // Processa a busca\r\n  const handleSearch = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setFeedback('');\r\n\r\n    const { tipo, valor } = identificarTipoDeBusca(query);\r\n\r\n    try {\r\n      let resultados = [];\r\n\r\n      if (tipo === 'data') {\r\n        const params =\r\n          valor.length === 4\r\n            ? { data: `${valor}-01-01` }\r\n            : { data: valor };\r\n        resultados = await buscarTrabalhos(params);\r\n      } else if (tipo === 'ods') {\r\n        const params = { ods: valor };\r\n        resultados = await buscarTrabalhos(params);\r\n      } else if (tipo === 'palavra-chave') {\r\n        const termos = normalizarTexto(valor).split(/\\s+/);\r\n        const buscas = await Promise.all(\r\n          termos.map((termo) =>\r\n            buscarTrabalhos({ palavra_resumo: termo }).catch(() => [])\r\n          )\r\n        );\r\n        resultados = [...new Set(buscas.flat())];\r\n      }\r\n\r\n      if (resultados.length === 0) {\r\n        setFeedback('Nenhum resultado encontrado. Tente outros termos ou refine sua busca.');\r\n      }\r\n      onResults(resultados);\r\n    } catch (err) {\r\n      setError('Erro ao buscar trabalhos. Tente novamente.');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTagClick = (tag) => {\r\n    setQuery(tag);\r\n    handleSearch(tag);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchWrapper>\r\n      <SearchInput\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        onKeyDown={handleKeyDown}\r\n        placeholder=\"Ex.: data:2021, ODS:1, dignidade previdência\"\r\n      />\r\n      <SearchButton onClick={handleSearch} disabled={loading}>\r\n        {loading ? 'Buscando...' : 'Pesquisar'}\r\n      </SearchButton>\r\n      {error && <FeedbackMessage>{error}</FeedbackMessage>}\r\n      {feedback && <FeedbackMessage>{feedback}</FeedbackMessage>}\r\n      \r\n      <TagsWrapper>\r\n        {currentTags.map((tag, index) => (\r\n          <Tag\r\n            key={index}\r\n            onClick={() => handleTagClick(tag)}\r\n            color={tagColors[index % tagColors.length]}\r\n          >\r\n            {tag}\r\n          </Tag>\r\n        ))}\r\n      </TagsWrapper>\r\n    </SearchWrapper>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}