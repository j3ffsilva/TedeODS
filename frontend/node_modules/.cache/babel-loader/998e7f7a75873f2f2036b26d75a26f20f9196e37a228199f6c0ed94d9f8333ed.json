{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inteli\\\\Desktop\\\\Fran_D\\xEA\\\\Projeto_Jefferson_ODS\\\\search-system\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { buscarTrabalhos } from '../api';\n\n// Estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 150px;\n`;\n_c = SearchWrapper;\nconst SearchInput = styled.input`\n  width: 600px;\n  padding: 15px;\n  font-size: 18px;\n  border: 2px solid #ddd;\n  border-radius: 24px;\n  margin-bottom: 20px;\n`;\n_c2 = SearchInput;\nconst SearchButton = styled.button`\n  padding: 10px 20px;\n  background-color: #4285f4;\n  color: white;\n  border: none;\n  border-radius: 24px;\n  cursor: pointer;\n  font-size: 16px;\n\n  &:hover {\n    background-color: #357ae8;\n  }\n`;\n_c3 = SearchButton;\nconst TagsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin: 20px 0;\n`;\n_c4 = TagsWrapper;\nconst Tag = styled.span`\n  background-color: ${({\n  color\n}) => color || '#f1f3f4'};\n  color: #fff;\n  padding: 8px 16px;\n  border-radius: 20px;\n  font-size: 14px;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n_c5 = Tag;\nconst FeedbackMessage = styled.p`\n  color: red;\n  margin-top: 20px;\n`;\n\n// Função para normalizar texto (remover acentos, transformar em minúsculas)\n_c6 = FeedbackMessage;\nconst normalizarTexto = texto => texto.normalize('NFD') // Normaliza acentos\n.replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\n.toLowerCase(); // Converte para minúsculas\n\nfunction SearchBar({\n  query,\n  onResults\n}) {\n  _s();\n  const [inputValue, setInputValue] = useState(''); // Estado para o campo de entrada\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tags, setTags] = useState([]); // Todas as tags disponíveis\n  const [currentTags, setCurrentTags] = useState([]); // Tags rotativas exibidas\n  const [tagColors, setTagColors] = useState([]); // Cores rotativas\n  const [feedback, setFeedback] = useState('');\n  const fixedColors = ['#FF5733', '#4285F4', '#FFA500', '#34A853', '#800080'];\n\n  // Atualiza o valor do campo quando o `query` muda\n  useEffect(() => {\n    if (query) {\n      setInputValue(query); // Preenche o campo com o valor do `query`\n      handleSearch(query); // Realiza a busca automaticamente\n    }\n  }, [query]);\n\n  // Função para carregar as tags\n  useEffect(() => {\n    const carregarODS = async () => {\n      try {\n        const resultados = await buscarODS();\n        const uniqueTags = [...new Set(resultados.flatMap(item => item.palavras_chave || []))];\n        setTags(uniqueTags); // Salva todas as tags disponíveis\n        atualizarTags(uniqueTags); // Inicializa as primeiras tags exibidas\n        setTagColors([...fixedColors].sort(() => Math.random() - 0.5));\n      } catch (err) {\n        console.error('Erro ao carregar dados iniciais:', err);\n        setError('Erro ao carregar dados iniciais.');\n      }\n    };\n    carregarODS();\n  }, []);\n\n  // Função para atualizar as tags exibidas a cada 20 segundos\n  useEffect(() => {\n    if (tags.length > 0) {\n      const interval = setInterval(() => {\n        atualizarTags(tags);\n      }, 20000); // 20 segundos\n\n      return () => clearInterval(interval); // Limpa o intervalo ao desmontar\n    }\n  }, [tags]);\n  const atualizarTags = todasAsTags => {\n    const shuffledTags = [...todasAsTags].sort(() => Math.random() - 0.5);\n    setCurrentTags(shuffledTags.slice(0, 5)); // Exibe as próximas 5 tags\n    setTagColors([...fixedColors].sort(() => Math.random() - 0.5));\n  };\n  const handleSearch = async (searchQuery = inputValue) => {\n    setLoading(true);\n    setError(null);\n    setFeedback('');\n    const identificarTipoDeBusca = query => {\n      const lowerQuery = normalizarTexto(query.trim());\n      if (lowerQuery.startsWith('data:')) {\n        const data = lowerQuery.replace('data:', '').trim();\n        return {\n          tipo: 'data',\n          valor: data\n        };\n      }\n      if (lowerQuery.startsWith('ods:')) {\n        const ods = lowerQuery.replace('ods:', '').trim();\n        return {\n          tipo: 'ods',\n          valor: parseInt(ods, 10)\n        };\n      }\n      return {\n        tipo: 'palavra-chave',\n        valor: query\n      };\n    };\n    const {\n      tipo,\n      valor\n    } = identificarTipoDeBusca(searchQuery);\n    try {\n      let resultados = [];\n      if (tipo === 'data') {\n        const params = valor.length === 4 ? {\n          data: `${valor}-01-01`\n        } : {\n          data: valor\n        };\n        resultados = await buscarTrabalhos(params);\n      } else if (tipo === 'ods') {\n        const params = {\n          ods: valor\n        };\n        resultados = await buscarTrabalhos(params);\n      } else if (tipo === 'palavra-chave') {\n        const termos = normalizarTexto(valor).split(/\\s+/);\n        const buscas = await Promise.all(termos.map(termo => buscarTrabalhos({\n          palavra_resumo: termo\n        }).catch(() => [])));\n        resultados = [...new Set(buscas.flat())];\n      }\n      if (resultados.length === 0) {\n        setFeedback('Nenhum resultado encontrado. Tente outros termos ou refine sua busca.');\n      }\n      onResults(resultados);\n    } catch (err) {\n      setError('Erro ao buscar trabalhos. Tente novamente.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTagClick = tag => {\n    setInputValue(tag);\n    handleSearch(tag);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SearchWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value),\n      onKeyDown: handleKeyDown,\n      placeholder: \"Ex.: data:2021, ODS:1, dignidade previd\\xEAncia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n      onClick: () => handleSearch(),\n      disabled: loading,\n      children: loading ? 'Buscando...' : 'Pesquisar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }, this), error && /*#__PURE__*/_jsxDEV(FeedbackMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }, this), feedback && /*#__PURE__*/_jsxDEV(FeedbackMessage, {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(TagsWrapper, {\n      children: currentTags.map((tag, index) => /*#__PURE__*/_jsxDEV(Tag, {\n        onClick: () => handleTagClick(tag),\n        color: tagColors[index % tagColors.length],\n        children: tag\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchBar, \"3nuBOd3JXN70cSzd0zD5LPibDrA=\");\n_c7 = SearchBar;\nexport default SearchBar;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"SearchWrapper\");\n$RefreshReg$(_c2, \"SearchInput\");\n$RefreshReg$(_c3, \"SearchButton\");\n$RefreshReg$(_c4, \"TagsWrapper\");\n$RefreshReg$(_c5, \"Tag\");\n$RefreshReg$(_c6, \"FeedbackMessage\");\n$RefreshReg$(_c7, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","styled","buscarTrabalhos","jsxDEV","_jsxDEV","SearchWrapper","div","_c","SearchInput","input","_c2","SearchButton","button","_c3","TagsWrapper","_c4","Tag","span","color","_c5","FeedbackMessage","p","_c6","normalizarTexto","texto","normalize","replace","toLowerCase","SearchBar","query","onResults","_s","inputValue","setInputValue","loading","setLoading","error","setError","tags","setTags","currentTags","setCurrentTags","tagColors","setTagColors","feedback","setFeedback","fixedColors","handleSearch","carregarODS","resultados","buscarODS","uniqueTags","Set","flatMap","item","palavras_chave","atualizarTags","sort","Math","random","err","console","length","interval","setInterval","clearInterval","todasAsTags","shuffledTags","slice","searchQuery","identificarTipoDeBusca","lowerQuery","trim","startsWith","data","tipo","valor","ods","parseInt","params","termos","split","buscas","Promise","all","map","termo","palavra_resumo","catch","flat","handleTagClick","tag","handleKeyDown","e","key","children","type","value","onChange","target","onKeyDown","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","index","_c7","$RefreshReg$"],"sources":["C:/Users/Inteli/Desktop/Fran_Dê/Projeto_Jefferson_ODS/search-system/src/components/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { buscarTrabalhos } from '../api';\r\n\r\n// Estilos\r\nconst SearchWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 150px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 600px;\r\n  padding: 15px;\r\n  font-size: 18px;\r\n  border: 2px solid #ddd;\r\n  border-radius: 24px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  padding: 10px 20px;\r\n  background-color: #4285f4;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 24px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n\r\n  &:hover {\r\n    background-color: #357ae8;\r\n  }\r\n`;\r\n\r\nconst TagsWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Tag = styled.span`\r\n  background-color: ${({ color }) => color || '#f1f3f4'};\r\n  color: #fff;\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst FeedbackMessage = styled.p`\r\n  color: red;\r\n  margin-top: 20px;\r\n`;\r\n\r\n// Função para normalizar texto (remover acentos, transformar em minúsculas)\r\nconst normalizarTexto = (texto) =>\r\n  texto\r\n    .normalize('NFD') // Normaliza acentos\r\n    .replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\r\n    .toLowerCase(); // Converte para minúsculas\r\n\r\n    function SearchBar({ query, onResults }) {\r\n      const [inputValue, setInputValue] = useState(''); // Estado para o campo de entrada\r\n      const [loading, setLoading] = useState(false);\r\n      const [error, setError] = useState(null);\r\n      const [tags, setTags] = useState([]); // Todas as tags disponíveis\r\n      const [currentTags, setCurrentTags] = useState([]); // Tags rotativas exibidas\r\n      const [tagColors, setTagColors] = useState([]); // Cores rotativas\r\n      const [feedback, setFeedback] = useState('');\r\n    \r\n      const fixedColors = ['#FF5733', '#4285F4', '#FFA500', '#34A853', '#800080'];\r\n    \r\n      // Atualiza o valor do campo quando o `query` muda\r\n      useEffect(() => {\r\n        if (query) {\r\n          setInputValue(query); // Preenche o campo com o valor do `query`\r\n          handleSearch(query); // Realiza a busca automaticamente\r\n        }\r\n      }, [query]);\r\n    \r\n      // Função para carregar as tags\r\n      useEffect(() => {\r\n        const carregarODS = async () => {\r\n          try {\r\n            const resultados = await buscarODS();\r\n            const uniqueTags = [...new Set(resultados.flatMap((item) => item.palavras_chave || []))];\r\n            setTags(uniqueTags); // Salva todas as tags disponíveis\r\n            atualizarTags(uniqueTags); // Inicializa as primeiras tags exibidas\r\n            setTagColors([...fixedColors].sort(() => Math.random() - 0.5));\r\n          } catch (err) {\r\n            console.error('Erro ao carregar dados iniciais:', err);\r\n            setError('Erro ao carregar dados iniciais.');\r\n          }\r\n        };\r\n    \r\n        carregarODS();\r\n      }, []);\r\n    \r\n      // Função para atualizar as tags exibidas a cada 20 segundos\r\n      useEffect(() => {\r\n        if (tags.length > 0) {\r\n          const interval = setInterval(() => {\r\n            atualizarTags(tags);\r\n          }, 20000); // 20 segundos\r\n    \r\n          return () => clearInterval(interval); // Limpa o intervalo ao desmontar\r\n        }\r\n      }, [tags]);\r\n    \r\n      const atualizarTags = (todasAsTags) => {\r\n        const shuffledTags = [...todasAsTags].sort(() => Math.random() - 0.5);\r\n        setCurrentTags(shuffledTags.slice(0, 5)); // Exibe as próximas 5 tags\r\n        setTagColors([...fixedColors].sort(() => Math.random() - 0.5));\r\n      };\r\n    \r\n      const handleSearch = async (searchQuery = inputValue) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        setFeedback('');\r\n    \r\n        const identificarTipoDeBusca = (query) => {\r\n          const lowerQuery = normalizarTexto(query.trim());\r\n    \r\n          if (lowerQuery.startsWith('data:')) {\r\n            const data = lowerQuery.replace('data:', '').trim();\r\n            return { tipo: 'data', valor: data };\r\n          }\r\n    \r\n          if (lowerQuery.startsWith('ods:')) {\r\n            const ods = lowerQuery.replace('ods:', '').trim();\r\n            return { tipo: 'ods', valor: parseInt(ods, 10) };\r\n          }\r\n    \r\n          return { tipo: 'palavra-chave', valor: query };\r\n        };\r\n    \r\n        const { tipo, valor } = identificarTipoDeBusca(searchQuery);\r\n    \r\n        try {\r\n          let resultados = [];\r\n    \r\n          if (tipo === 'data') {\r\n            const params = valor.length === 4 ? { data: `${valor}-01-01` } : { data: valor };\r\n            resultados = await buscarTrabalhos(params);\r\n          } else if (tipo === 'ods') {\r\n            const params = { ods: valor };\r\n            resultados = await buscarTrabalhos(params);\r\n          } else if (tipo === 'palavra-chave') {\r\n            const termos = normalizarTexto(valor).split(/\\s+/);\r\n            const buscas = await Promise.all(\r\n              termos.map((termo) =>\r\n                buscarTrabalhos({ palavra_resumo: termo }).catch(() => [])\r\n              )\r\n            );\r\n            resultados = [...new Set(buscas.flat())];\r\n          }\r\n    \r\n          if (resultados.length === 0) {\r\n            setFeedback('Nenhum resultado encontrado. Tente outros termos ou refine sua busca.');\r\n          }\r\n          onResults(resultados);\r\n        } catch (err) {\r\n          setError('Erro ao buscar trabalhos. Tente novamente.');\r\n          console.error(err);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n    \r\n      const handleTagClick = (tag) => {\r\n        setInputValue(tag);\r\n        handleSearch(tag);\r\n      };\r\n    \r\n      const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n          handleSearch();\r\n        }\r\n      };\r\n    \r\n      return (\r\n        <SearchWrapper>\r\n          <SearchInput\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder=\"Ex.: data:2021, ODS:1, dignidade previdência\"\r\n          />\r\n          <SearchButton onClick={() => handleSearch()} disabled={loading}>\r\n            {loading ? 'Buscando...' : 'Pesquisar'}\r\n          </SearchButton>\r\n          {error && <FeedbackMessage>{error}</FeedbackMessage>}\r\n          {feedback && <FeedbackMessage>{feedback}</FeedbackMessage>}\r\n          \r\n          <TagsWrapper>\r\n            {currentTags.map((tag, index) => (\r\n              <Tag\r\n                key={index}\r\n                onClick={() => handleTagClick(tag)}\r\n                color={tagColors[index % tagColors.length]}\r\n              >\r\n                {tag}\r\n              </Tag>\r\n            ))}\r\n          </TagsWrapper>\r\n        </SearchWrapper>\r\n      );\r\n    }\r\n    \r\n    export default SearchBar;\r\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}