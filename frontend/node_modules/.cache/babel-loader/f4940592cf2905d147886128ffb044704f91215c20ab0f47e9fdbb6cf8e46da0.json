{"ast":null,"code":"import React,{useState,useEffect}from'react';import styled from'styled-components';import{buscarTrabalhos,buscarODS}from'../api';// Estilos\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SearchWrapper=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 150px;\n`;const SearchInput=styled.input`\n  width: 600px;\n  padding: 15px;\n  font-size: 18px;\n  border: 2px solid #ddd;\n  border-radius: 24px;\n  margin-bottom: 20px;\n`;const SearchButton=styled.button`\n  padding: 10px 20px;\n  background-color: #4285f4;\n  color: white;\n  border: none;\n  border-radius: 24px;\n  cursor: pointer;\n  font-size: 16px;\n\n  &:hover {\n    background-color: #357ae8;\n  }\n`;const TagsWrapper=styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin: 20px 0;\n`;const Tag=styled.span`\n  background-color: ${_ref=>{let{color}=_ref;return color||'#f1f3f4';}};\n  color: #fff;\n  padding: 8px 16px;\n  border-radius: 20px;\n  font-size: 14px;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;const FeedbackMessage=styled.p`\n  color: red;\n  margin-top: 20px;\n`;// Função para normalizar texto (remover acentos, transformar em minúsculas)\nconst normalizarTexto=texto=>texto.normalize('NFD')// Normaliza acentos\n.replace(/[\\u0300-\\u036f]/g,'')// Remove acentos\n.toLowerCase();// Converte para minúsculas\nfunction SearchBar(_ref2){let{query,onResults}=_ref2;const[inputValue,setInputValue]=useState('');// Estado para o campo de entrada\nconst[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[tags,setTags]=useState([]);// Todas as tags disponíveis\nconst[currentTags,setCurrentTags]=useState([]);// Tags rotativas exibidas\nconst[tagColors,setTagColors]=useState([]);// Cores rotativas\nconst[feedback,setFeedback]=useState('');const fixedColors=['#FF5733','#4285F4','#FFA500','#34A853','#800080'];// Atualiza o valor do campo quando o `query` muda\nuseEffect(()=>{if(query){setInputValue(query);// Preenche o campo com o valor do `query`\nhandleSearch(query);// Realiza a busca automaticamente\n}},[query]);// Função para carregar as tags\nuseEffect(()=>{const carregarODS=async()=>{try{const resultados=await buscarODS();const uniqueTags=[...new Set(resultados.flatMap(item=>item.palavras_chave||[]))];setTags(uniqueTags);// Salva todas as tags disponíveis\natualizarTags(uniqueTags);// Inicializa as primeiras tags exibidas\nsetTagColors([...fixedColors].sort(()=>Math.random()-0.5));}catch(err){console.error('Erro ao carregar dados iniciais:',err);setError('Erro ao carregar dados iniciais.');}};carregarODS();},[]);// Função para atualizar as tags exibidas a cada 20 segundos\nuseEffect(()=>{if(tags.length>0){const interval=setInterval(()=>{atualizarTags(tags);},20000);// 20 segundos\nreturn()=>clearInterval(interval);// Limpa o intervalo ao desmontar\n}},[tags]);const atualizarTags=todasAsTags=>{const shuffledTags=[...todasAsTags].sort(()=>Math.random()-0.5);setCurrentTags(shuffledTags.slice(0,5));// Exibe as próximas 5 tags\nsetTagColors([...fixedColors].sort(()=>Math.random()-0.5));};const handleSearch=async function(){let searchQuery=arguments.length>0&&arguments[0]!==undefined?arguments[0]:inputValue;setLoading(true);setError(null);setFeedback('');const identificarTipoDeBusca=query=>{const lowerQuery=normalizarTexto(query.trim());if(lowerQuery.startsWith('data:')){const data=lowerQuery.replace('data:','').trim();return{tipo:'data',valor:data};}if(lowerQuery.startsWith('ods:')){const ods=lowerQuery.replace('ods:','').trim();return{tipo:'ods',valor:parseInt(ods,10)};}return{tipo:'palavra-chave',valor:query};};const{tipo,valor}=identificarTipoDeBusca(searchQuery);try{let resultados=[];if(tipo==='data'){const params=valor.length===4?{data:`${valor}-01-01`}:{data:valor};resultados=await buscarTrabalhos(params);}else if(tipo==='ods'){const params={ods:valor};resultados=await buscarTrabalhos(params);}else if(tipo==='palavra-chave'){const termos=normalizarTexto(valor).split(/\\s+/);const buscas=await Promise.all(termos.map(termo=>buscarTrabalhos({palavra_resumo:termo}).catch(()=>[])));resultados=[...new Set(buscas.flat())];}if(resultados.length===0){setFeedback('Nenhum resultado encontrado. Tente outros termos ou refine sua busca.');}onResults(resultados);}catch(err){setError('Erro ao buscar trabalhos. Tente novamente.');console.error(err);}finally{setLoading(false);}};const handleTagClick=tag=>{setInputValue(tag);handleSearch(tag);};const handleKeyDown=e=>{if(e.key==='Enter'){handleSearch();}};return/*#__PURE__*/_jsxs(SearchWrapper,{children:[/*#__PURE__*/_jsx(SearchInput,{type:\"text\",value:inputValue,onChange:e=>setInputValue(e.target.value),onKeyDown:handleKeyDown,placeholder:\"Ex.: data:2021, ODS:1, dignidade previd\\xEAncia\"}),/*#__PURE__*/_jsx(SearchButton,{onClick:()=>handleSearch(),disabled:loading,children:loading?'Buscando...':'Pesquisar'}),error&&/*#__PURE__*/_jsx(FeedbackMessage,{children:error}),feedback&&/*#__PURE__*/_jsx(FeedbackMessage,{children:feedback}),/*#__PURE__*/_jsx(TagsWrapper,{children:currentTags.map((tag,index)=>/*#__PURE__*/_jsx(Tag,{onClick:()=>handleTagClick(tag),color:tagColors[index%tagColors.length],children:tag},index))})]});}export default SearchBar;","map":{"version":3,"names":["React","useState","useEffect","styled","buscarTrabalhos","buscarODS","jsx","_jsx","jsxs","_jsxs","SearchWrapper","div","SearchInput","input","SearchButton","button","TagsWrapper","Tag","span","_ref","color","FeedbackMessage","p","normalizarTexto","texto","normalize","replace","toLowerCase","SearchBar","_ref2","query","onResults","inputValue","setInputValue","loading","setLoading","error","setError","tags","setTags","currentTags","setCurrentTags","tagColors","setTagColors","feedback","setFeedback","fixedColors","handleSearch","carregarODS","resultados","uniqueTags","Set","flatMap","item","palavras_chave","atualizarTags","sort","Math","random","err","console","length","interval","setInterval","clearInterval","todasAsTags","shuffledTags","slice","searchQuery","arguments","undefined","identificarTipoDeBusca","lowerQuery","trim","startsWith","data","tipo","valor","ods","parseInt","params","termos","split","buscas","Promise","all","map","termo","palavra_resumo","catch","flat","handleTagClick","tag","handleKeyDown","e","key","children","type","value","onChange","target","onKeyDown","placeholder","onClick","disabled","index"],"sources":["C:/Users/Inteli/Desktop/Fran_Dê/Projeto_Jefferson_ODS/search-system/src/components/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { buscarTrabalhos, buscarODS } from '../api';\r\n\r\n// Estilos\r\nconst SearchWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 150px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 600px;\r\n  padding: 15px;\r\n  font-size: 18px;\r\n  border: 2px solid #ddd;\r\n  border-radius: 24px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  padding: 10px 20px;\r\n  background-color: #4285f4;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 24px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n\r\n  &:hover {\r\n    background-color: #357ae8;\r\n  }\r\n`;\r\n\r\nconst TagsWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Tag = styled.span`\r\n  background-color: ${({ color }) => color || '#f1f3f4'};\r\n  color: #fff;\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst FeedbackMessage = styled.p`\r\n  color: red;\r\n  margin-top: 20px;\r\n`;\r\n\r\n// Função para normalizar texto (remover acentos, transformar em minúsculas)\r\nconst normalizarTexto = (texto) =>\r\n  texto\r\n    .normalize('NFD') // Normaliza acentos\r\n    .replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\r\n    .toLowerCase(); // Converte para minúsculas\r\n\r\n    function SearchBar({ query, onResults }) {\r\n      const [inputValue, setInputValue] = useState(''); // Estado para o campo de entrada\r\n      const [loading, setLoading] = useState(false);\r\n      const [error, setError] = useState(null);\r\n      const [tags, setTags] = useState([]); // Todas as tags disponíveis\r\n      const [currentTags, setCurrentTags] = useState([]); // Tags rotativas exibidas\r\n      const [tagColors, setTagColors] = useState([]); // Cores rotativas\r\n      const [feedback, setFeedback] = useState('');\r\n    \r\n      const fixedColors = ['#FF5733', '#4285F4', '#FFA500', '#34A853', '#800080'];\r\n    \r\n      // Atualiza o valor do campo quando o `query` muda\r\n      useEffect(() => {\r\n        if (query) {\r\n          setInputValue(query); // Preenche o campo com o valor do `query`\r\n          handleSearch(query); // Realiza a busca automaticamente\r\n        }\r\n      }, [query]);\r\n    \r\n      // Função para carregar as tags\r\n      useEffect(() => {\r\n        const carregarODS = async () => {\r\n          try {\r\n            const resultados = await buscarODS();\r\n            const uniqueTags = [...new Set(resultados.flatMap((item) => item.palavras_chave || []))];\r\n            setTags(uniqueTags); // Salva todas as tags disponíveis\r\n            atualizarTags(uniqueTags); // Inicializa as primeiras tags exibidas\r\n            setTagColors([...fixedColors].sort(() => Math.random() - 0.5));\r\n          } catch (err) {\r\n            console.error('Erro ao carregar dados iniciais:', err);\r\n            setError('Erro ao carregar dados iniciais.');\r\n          }\r\n        };\r\n    \r\n        carregarODS();\r\n      }, []);\r\n    \r\n      // Função para atualizar as tags exibidas a cada 20 segundos\r\n      useEffect(() => {\r\n        if (tags.length > 0) {\r\n          const interval = setInterval(() => {\r\n            atualizarTags(tags);\r\n          }, 20000); // 20 segundos\r\n    \r\n          return () => clearInterval(interval); // Limpa o intervalo ao desmontar\r\n        }\r\n      }, [tags]);\r\n    \r\n      const atualizarTags = (todasAsTags) => {\r\n        const shuffledTags = [...todasAsTags].sort(() => Math.random() - 0.5);\r\n        setCurrentTags(shuffledTags.slice(0, 5)); // Exibe as próximas 5 tags\r\n        setTagColors([...fixedColors].sort(() => Math.random() - 0.5));\r\n      };\r\n    \r\n      const handleSearch = async (searchQuery = inputValue) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        setFeedback('');\r\n    \r\n        const identificarTipoDeBusca = (query) => {\r\n          const lowerQuery = normalizarTexto(query.trim());\r\n    \r\n          if (lowerQuery.startsWith('data:')) {\r\n            const data = lowerQuery.replace('data:', '').trim();\r\n            return { tipo: 'data', valor: data };\r\n          }\r\n    \r\n          if (lowerQuery.startsWith('ods:')) {\r\n            const ods = lowerQuery.replace('ods:', '').trim();\r\n            return { tipo: 'ods', valor: parseInt(ods, 10) };\r\n          }\r\n    \r\n          return { tipo: 'palavra-chave', valor: query };\r\n        };\r\n    \r\n        const { tipo, valor } = identificarTipoDeBusca(searchQuery);\r\n    \r\n        try {\r\n          let resultados = [];\r\n    \r\n          if (tipo === 'data') {\r\n            const params = valor.length === 4 ? { data: `${valor}-01-01` } : { data: valor };\r\n            resultados = await buscarTrabalhos(params);\r\n          } else if (tipo === 'ods') {\r\n            const params = { ods: valor };\r\n            resultados = await buscarTrabalhos(params);\r\n          } else if (tipo === 'palavra-chave') {\r\n            const termos = normalizarTexto(valor).split(/\\s+/);\r\n            const buscas = await Promise.all(\r\n              termos.map((termo) =>\r\n                buscarTrabalhos({ palavra_resumo: termo }).catch(() => [])\r\n              )\r\n            );\r\n            resultados = [...new Set(buscas.flat())];\r\n          }\r\n    \r\n          if (resultados.length === 0) {\r\n            setFeedback('Nenhum resultado encontrado. Tente outros termos ou refine sua busca.');\r\n          }\r\n          onResults(resultados);\r\n        } catch (err) {\r\n          setError('Erro ao buscar trabalhos. Tente novamente.');\r\n          console.error(err);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n    \r\n      const handleTagClick = (tag) => {\r\n        setInputValue(tag);\r\n        handleSearch(tag);\r\n      };\r\n    \r\n      const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n          handleSearch();\r\n        }\r\n      };\r\n    \r\n      return (\r\n        <SearchWrapper>\r\n          <SearchInput\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder=\"Ex.: data:2021, ODS:1, dignidade previdência\"\r\n          />\r\n          <SearchButton onClick={() => handleSearch()} disabled={loading}>\r\n            {loading ? 'Buscando...' : 'Pesquisar'}\r\n          </SearchButton>\r\n          {error && <FeedbackMessage>{error}</FeedbackMessage>}\r\n          {feedback && <FeedbackMessage>{feedback}</FeedbackMessage>}\r\n          \r\n          <TagsWrapper>\r\n            {currentTags.map((tag, index) => (\r\n              <Tag\r\n                key={index}\r\n                onClick={() => handleTagClick(tag)}\r\n                color={tagColors[index % tagColors.length]}\r\n              >\r\n                {tag}\r\n              </Tag>\r\n            ))}\r\n          </TagsWrapper>\r\n        </SearchWrapper>\r\n      );\r\n    }\r\n    \r\n    export default SearchBar;\r\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}