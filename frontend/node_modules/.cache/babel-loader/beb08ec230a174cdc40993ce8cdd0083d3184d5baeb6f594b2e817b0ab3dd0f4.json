{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import styled from\"styled-components\";import{buscarTrabalhos,buscarODS}from\"../api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SearchWrapper=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 150px;\n`;const SearchInput=styled.input`\n  width: 600px;\n  padding: 15px;\n  font-size: 18px;\n  border: 2px solid #ddd;\n  border-radius: 24px;\n  margin-bottom: 20px;\n`;const SearchButton=styled.button`\n  padding: 10px 20px;\n  background-color: #4285f4;\n  color: white;\n  border: none;\n  border-radius: 24px;\n  cursor: pointer;\n  font-size: 16px;\n\n  &:hover {\n    background-color: #357ae8;\n  }\n`;const TagsWrapper=styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin: 20px 0;\n`;const Tag=styled.span`\n  background-color: ${_ref=>{let{color}=_ref;return color||\"#f1f3f4\";}};\n  color: #fff;\n  padding: 8px 16px;\n  border-radius: 20px;\n  font-size: 14px;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;function SearchBar(_ref2){let{onResults}=_ref2;const[query,setQuery]=useState(\"\");const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[tags,setTags]=useState([]);const[tagColors,setTagColors]=useState([]);const[currentTagIndex,setCurrentTagIndex]=useState(0);// Define as cores fixas (trocando o bege por roxo)\nconst fixedColors=[\"#FF5733\",\"#4285F4\",\"#FFA500\",\"#34A853\",\"#800080\"];// Vermelho, Azul, Laranja, Verde, Roxo\nuseEffect(()=>{const carregarODS=async()=>{try{const resultados=await buscarODS();const odsTags=[];resultados.forEach(item=>{if(item.palavras_chave){odsTags.push(...item.palavras_chave);}else if(item.titulo){odsTags.push(item.titulo);}});setTags([...new Set(odsTags)].slice(0,10));// Remove duplicatas e pega até 10\nconst shuffledColors=[...fixedColors].sort(()=>Math.random()-0.5);setTagColors(shuffledColors);}catch(err){console.error(\"Erro ao carregar dados iniciais:\",err);setError(\"Erro ao carregar dados iniciais.\");}};carregarODS();},[]);// Atualizar tags a cada 5 segundos\nuseEffect(()=>{const interval=setInterval(()=>{setCurrentTagIndex(prevIndex=>(prevIndex+5)%tags.length);const shuffledColors=[...fixedColors].sort(()=>Math.random()-0.5);setTagColors(shuffledColors);},5000);return()=>clearInterval(interval);},[tags,fixedColors]);const handleSearch=async()=>{setLoading(true);setError(null);try{const params={palavra_resumo:query};const resultados=await buscarTrabalhos(params);onResults(resultados);}catch(err){setError(\"Erro ao buscar trabalhos. Tente novamente.\");}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(SearchWrapper,{children:[/*#__PURE__*/_jsx(SearchInput,{type:\"text\",value:query,onChange:e=>setQuery(e.target.value),placeholder:\"Digite sua busca (ex.: dignidade, previd\\xEAncia)...\"}),/*#__PURE__*/_jsx(SearchButton,{onClick:handleSearch,disabled:loading,children:loading?\"Buscando...\":\"Pesquisar\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:error}),/*#__PURE__*/_jsx(TagsWrapper,{children:tags.slice(currentTagIndex,currentTagIndex+5).map((tag,index)=>/*#__PURE__*/_jsx(Tag,{color:tagColors[index%tagColors.length],onClick:()=>{setQuery(tag);handleSearch(tag);},children:tag},index))})]});}export default SearchBar;","map":{"version":3,"names":["React","useState","useEffect","styled","buscarTrabalhos","buscarODS","jsx","_jsx","jsxs","_jsxs","SearchWrapper","div","SearchInput","input","SearchButton","button","TagsWrapper","Tag","span","_ref","color","SearchBar","_ref2","onResults","query","setQuery","loading","setLoading","error","setError","tags","setTags","tagColors","setTagColors","currentTagIndex","setCurrentTagIndex","fixedColors","carregarODS","resultados","odsTags","forEach","item","palavras_chave","push","titulo","Set","slice","shuffledColors","sort","Math","random","err","console","interval","setInterval","prevIndex","length","clearInterval","handleSearch","params","palavra_resumo","children","type","value","onChange","e","target","placeholder","onClick","disabled","style","map","tag","index"],"sources":["C:/Users/Inteli/Desktop/Fran_Dê/Projeto_Jefferson/search-system/src/components/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { buscarTrabalhos, buscarODS } from \"../api\";\r\n\r\nconst SearchWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 150px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 600px;\r\n  padding: 15px;\r\n  font-size: 18px;\r\n  border: 2px solid #ddd;\r\n  border-radius: 24px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  padding: 10px 20px;\r\n  background-color: #4285f4;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 24px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n\r\n  &:hover {\r\n    background-color: #357ae8;\r\n  }\r\n`;\r\n\r\nconst TagsWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Tag = styled.span`\r\n  background-color: ${({ color }) => color || \"#f1f3f4\"};\r\n  color: #fff;\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nfunction SearchBar({ onResults }) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [tags, setTags] = useState([]);\r\n  const [tagColors, setTagColors] = useState([]);\r\n  const [currentTagIndex, setCurrentTagIndex] = useState(0);\r\n\r\n  // Define as cores fixas (trocando o bege por roxo)\r\n  const fixedColors = [\"#FF5733\", \"#4285F4\", \"#FFA500\", \"#34A853\", \"#800080\"]; // Vermelho, Azul, Laranja, Verde, Roxo\r\n\r\n  useEffect(() => {\r\n    const carregarODS = async () => {\r\n      try {\r\n        const resultados = await buscarODS();\r\n        const odsTags = [];\r\n        resultados.forEach((item) => {\r\n          if (item.palavras_chave) {\r\n            odsTags.push(...item.palavras_chave);\r\n          } else if (item.titulo) {\r\n            odsTags.push(item.titulo);\r\n          }\r\n        });\r\n\r\n        setTags([...new Set(odsTags)].slice(0, 10)); // Remove duplicatas e pega até 10\r\n        const shuffledColors = [...fixedColors].sort(() => Math.random() - 0.5);\r\n        setTagColors(shuffledColors);\r\n      } catch (err) {\r\n        console.error(\"Erro ao carregar dados iniciais:\", err);\r\n        setError(\"Erro ao carregar dados iniciais.\");\r\n      }\r\n    };\r\n\r\n    carregarODS();\r\n  }, []);\r\n\r\n  // Atualizar tags a cada 5 segundos\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentTagIndex((prevIndex) => (prevIndex + 5) % tags.length);\r\n      const shuffledColors = [...fixedColors].sort(() => Math.random() - 0.5);\r\n      setTagColors(shuffledColors);\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [tags, fixedColors]);\r\n\r\n  const handleSearch = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const params = { palavra_resumo: query };\r\n      const resultados = await buscarTrabalhos(params);\r\n      onResults(resultados);\r\n    } catch (err) {\r\n      setError(\"Erro ao buscar trabalhos. Tente novamente.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchWrapper>\r\n      <SearchInput\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        placeholder=\"Digite sua busca (ex.: dignidade, previdência)...\"\r\n      />\r\n      <SearchButton onClick={handleSearch} disabled={loading}>\r\n        {loading ? \"Buscando...\" : \"Pesquisar\"}\r\n      </SearchButton>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      {/* Exibe as tags carregadas da API */}\r\n      <TagsWrapper>\r\n        {tags.slice(currentTagIndex, currentTagIndex + 5).map((tag, index) => (\r\n          <Tag\r\n            key={index}\r\n            color={tagColors[index % tagColors.length]}\r\n            onClick={() => {\r\n              setQuery(tag);\r\n              handleSearch(tag);\r\n            }}\r\n          >\r\n            {tag}\r\n          </Tag>\r\n        ))}\r\n      </TagsWrapper>\r\n    </SearchWrapper>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}